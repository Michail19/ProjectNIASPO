version: '3.8'

services:
  novnc:
    build:
      context: ..
      dockerfile: docker/Dockerfile-novnc
    ports:
      - "6080:6080"  # Порт для noVNC
    environment:
      - DISPLAY=:0  # Убедитесь, что используется правильный дисплей
    privileged: true
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix  # Общий volume для X-сокета
    command: /app/start-server.sh
    networks:
      - my-network  # Подключение к пользовательской сети

  emulator:
    shm_size: '1g'
    build:
      context: ..
      dockerfile: docker/Dockerfile-emulator
    ports:
      - "5037:5037"
    environment:
      - DISPLAY=:0
    devices:
      - "/dev/kvm:/dev/kvm"  # Подключение KVM
    privileged: true          # Привилегированный режим для доступа к KVM
    volumes:
      - ${PWD}/..:/app
      - /tmp/.X11-unix:/tmp/.X11-unix  # Общий volume для X-сокета
    command: ./run-emulator.sh
    depends_on:
      - novnc  # Теперь эмулятор зависит от noVNC
    networks:
      - my-network  # Подключение к пользовательской сети

  gradle:
    build:
      context: ..
      dockerfile: docker/Dockerfile-common
    working_dir: /app
    command: ["./gradlew", "assembleDebug"]
    networks:
      - my-network  # Подключение к пользовательской сети

  artifact-repo:
    build:
      context: ..
      dockerfile: docker/Dockerfile-artifact-repo  # Используем Dockerfile для контейнера artifact-repo
    volumes:
      - ${PWD}/docker/artifacts:/artifacts  # Подключение каталога для хранения артефактов
    command: sleep infinity  # Поддержание контейнера запущенным для хранения артефактов
    networks:
      - my-network  # Подключение к пользовательской сети

  linter:
    build:
      context: ..
      dockerfile: docker/Dockerfile-common
    working_dir: /app
    command: ["./gradlew", "lint"]
    networks:
      - my-network  # Подключение к пользовательской сети

networks:
  my-network:
    driver: bridge  # Использование bridge-сети
