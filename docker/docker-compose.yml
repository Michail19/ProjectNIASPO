version: '3.8'

services:
  xvfb:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-xvfb
    image: docker-xvfb:latest
    environment:
      - DISPLAY=:99
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    privileged: true
    cap_add:
      - SYS_ADMIN
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "ls", "/tmp/.X11-unix/X99"]
      interval: 5s
      retries: 5
      start_period: 10s
      timeout: 2s
    mem_limit: 2g
    cpus: "1.5"

  emulator:
    shm_size: '2g'
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-emulator
    image: docker-emulator:latest
    ports:
      - "5554:5554"
      - "5555:5555"
      - "5037:5037"
    environment:
      - DISPLAY=:99
      - ADB_SERVER_HOST=emulator
      - ADB_SERVER_PORT=5037
      - ADB_SERVER_SOCKET=tcp:emulator:5037
    devices:
      - "/dev/kvm:/dev/kvm"
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - ${PWD}/..:/app
      - adb-shared:/adb-shared
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    depends_on:
      xvfb:
        condition: service_healthy
    command: ./run-emulator.sh -no-host-only
    networks:
      - my-network
    mem_limit: 8g
    cpus: "2.0"
    healthcheck:
      test: ["CMD", "adb", "shell", "getprop", "sys.boot_completed"]
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 5s

  novnc:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-novnc
    image: docker-novnc:latest
    ports:
      - "5900:5900"
      - "6080:6080"
    environment:
      - DISPLAY=:99
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    depends_on:
      emulator:
        condition: service_healthy
    command: /app/start-server.sh
    networks:
      - my-network

  linter:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-linter
    image: docker-linter:latest
    volumes:
      - .:/app
    working_dir: /app
    command: ["ktlint"]
    networks:
      - my-network

  gradle:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-gradle
    image: docker-gradle:latest
    networks:
      - my-network
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - adb-shared:/adb-shared
    environment:
      - ADB_SERVER_HOST=emulator
      - ADB_SERVER_PORT=5037
      - ADB_SERVER_SOCKET=tcp:emulator:5037
    depends_on:
      emulator:
        condition: service_healthy
    command: bash -c "export ADB_SERVER_SOCKET=tcp:emulator:5037 && adb devices && ./install_and_run.sh"

  artifact-repo:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-artifact-repo
    image: docker-artifact-repo:latest
    volumes:
      - ${PWD}/docker/artifacts:/artifacts
    command: sleep infinity
    networks:
      - my-network

volumes:
  adb-shared:

networks:
  my-network:
    driver: bridge
