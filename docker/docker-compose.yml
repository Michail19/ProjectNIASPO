version: '3.8'

services:
  xvfb:
    build:
      context: ..
      dockerfile: docker/Dockerfile-xvfb
    environment:
      - DISPLAY=:1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    networks:
      - my-network

  novnc:
    build:
      context: ..
      dockerfile: docker/Dockerfile-novnc
    ports:
      - "5900:5900"   # Порт для VNC
      - "6080:6080"   # Порт для noVNC
    environment:
      - DISPLAY=:1
    privileged: true
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      xvfb:
        condition: service_healthy  # Убедитесь, что виртуальный дисплей запущен
    command: /app/start-server.sh
    networks:
      - my-network

  emulator:
    shm_size: '1g'
    build:
      context: ..
      dockerfile: docker/Dockerfile-emulator
    ports:
      - "5037:5037"
    environment:
      - DISPLAY=:1
    devices:
      - "/dev/kvm:/dev/kvm"
    privileged: true
    volumes:
      - ${PWD}/..:/app
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      xvfb:
        condition: service_healthy
    command: ./run-emulator.sh
    networks:
      - my-network

  gradle:
    build:
      context: ..
      dockerfile: docker/Dockerfile-common
    working_dir: /app
    command: ["./gradlew", "assembleDebug"]
    networks:
      - my-network

  artifact-repo:
    build:
      context: ..
      dockerfile: docker/Dockerfile-artifact-repo
    volumes:
      - ${PWD}/docker/artifacts:/artifacts
    command: sleep infinity
    networks:
      - my-network

  linter:
    build:
      context: ..
      dockerfile: docker/Dockerfile-common
    working_dir: /app
    command: ["./gradlew", "lint"]
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

