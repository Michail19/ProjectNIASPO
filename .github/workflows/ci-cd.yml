name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"


      - name: Build and run tests
        run: |
          ./gradlew test

      - name: Start Android Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot -no-audio -no-window &
          adb wait-for-device

      - name: Run UI tests (if applicable)
        run: |
          ./gradlew connectedAndroidTest


  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установить Docker и Docker Compose
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Шаг 3: Собрать и запустить контейнеры
      - name: Build and start containers
        run: |
          docker-compose -f ./docker/docker-compose.yml up --build -d

      # Шаг 4: Проверить состояние контейнеров
      - name: Check services health
        run: |
          docker-compose -f ./docker/docker-compose.yml ps || true

      # Шаг 5: Очистить после тестирования
      - name: Clean up
        if: always()
        run: |
          docker-compose -f ./docker/docker-compose.yml down


  deployment:
    runs-on: ubuntu-latest
    needs: integration

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Настроить Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 3: Установить Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Шаг 4: Войти в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 5: Собрать и загрузить образы в Docker Hub
      - name: Build and push Docker images
        run: |
          docker-compose -f ./docker/docker-compose.yml build
          docker-compose -f ./docker/docker-compose.yml push
