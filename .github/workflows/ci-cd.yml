name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0.0
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Build Docker images
        run: |
          docker compose -f docker/docker-compose.yml build

      - name: Start xvfb, emulator, and novnc services
        run: |
          docker compose -f docker/docker-compose.yml up -d xvfb emulator novnc
        timeout-minutes: 10

      - name: Wait for emulator health check
        run: |
          while [ "$(docker inspect --format='{{json .State.Health.Status}}' $(docker compose ps -q emulator))" != "\"healthy\"" ]; do
            echo "Waiting for emulator to become healthy..."
            sleep 10
          done

      - name: Lint code
        run: |
          docker compose -f docker/docker-compose.yml run --rm linter

      - name: Run tests with Gradle
        run: |
          docker compose -f docker/docker-compose.yml run --rm gradle

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          docker compose -f docker/docker-compose.yml run --rm artifact-repo cp -r /artifacts/* ./artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./artifacts

      - name: Clean up
        run: |
          docker compose down -v
