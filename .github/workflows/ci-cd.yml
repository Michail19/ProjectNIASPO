name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установить Docker и Docker Compose
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Шаг 3: Собрать контейнеры
      - name: Build Docker images
        run: |
          docker-compose -f ./docker/docker-compose.yml build

      # Шаг 4: Сохранить образы в артефакты
      - name: Save Docker images as artifacts
        run: |
          docker save -o docker-images.tar $(docker-compose -f ./docker/docker-compose.yml config | awk '/image:/ { print $2 }')
        # Сохранение артефакта
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: docker-images.tar

  deploy:
    runs-on: ubuntu-latest
    needs: integration

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Загрузить артефакты
      - name: Download Docker images artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-images
          path: docker-images.tar

      # Шаг 3: Загрузить Docker-образы
      - name: Load Docker images
        run: |
          docker load -i docker-images.tar

      # Шаг 4: Войти в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 5: Push Docker images
      - name: Push Docker images to Docker Hub
        run: |
          docker-compose -f ./docker/docker-compose.yml push
